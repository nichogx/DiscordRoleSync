# Used internally for backwards-compatibility with old config files.
# Please DO NOT change this manually as the plugin WILL crash.
configVersion: 3

# The language the plugin and bot should run in.
# A list of supported languages can be found here: https://gitlab.com/nichogx/DiscordRoleSync/-/tree/master/src/main/resources/language
#   You can add your own language files inside the `plugins/DiscordRoleSync/translations` folder and put the name of the file (without the extension) here.
#   You can copy any of the files from the link above into your custom translations folder and update it to your liking.
#   Files in the translation folder will be used over the ones in the .jar.
language: "en_US"

commandNames:
  # The Discord command that will link users
  link: "link"
  # The Discord command that will verify users (only if requireVerification is on)
  verify: "verify"
  # The Discord command that administrators can use to get information
  info: "info"
  # The Discord command that administrators can use to link other users
  admLink: "admLink"
  # The Discord command that administrators can use to unlink users
  unlink: "unlink"

bot:
  # Token -- you should keep this a secret. Get one from the Discord developer portal.
  token: ""

  # Server where the bot will look for roles
  server: "000000000000000000"

database:
  # Which database to use. Options are sqlite (file) or mysql.
  # For mysql you need to set the mysql configs below
  type: "sqlite"

  # Prefix for the tables that will be created in the databases
  # (do not include the _)
  tablePrefix: "syncbot"

  # Info for connecting to the MySQL database, ignored unless
  # database.type is "mysql"
  mysql:
    dbhost: ""
    dbport: 3306
    dbname: ""
    dbuser: ""
    dbpass: ""

    # WARNING: connecting to databases with SSL disabled is extremely unsafe!
    # only set the following to true if you really need it
    disableSSL: false

# If the bot should require users to be verified.
# To verify, users should type /drs verify in the Minecraft chat.
# If DRS whitelist is enabled, they will be given the code when they try to join.
requireVerification: false

# The URL of an invitation for your Discord server (will be sent to unlinked users when
# they try to verify their account)
discordUrl: ""

# How the bot should change the Discord nicknames when the user is linked.
# Possible values are:
# - no: the bot will not touch the Discord nicknames
# - after: the bot will put the Minecraft user in parentheses: discord name (mc user)
# - replace: the bot will replace the user's Discord nickname with the Minecraft user
# IF YOU SET THIS TO ANYTHING OTHER THAN "no" YOU NEED TO GIVE THE BOT A DISCORD ROLE
# HIGHER THAN ANY OTHER ROLES. Nickname editing will also not work with server owners :(
changeNicknames: "no"

# Should the bot manage a whitelist?
# It will kick those that don't have the whitelist role if enabled.
# Please disable the default whitelist with /whitelist off if you are using this.
manageWhitelist: false

# IDs of the roles that should have their members in the whitelist.json file
whitelistRoles:
  - "000000000000000000"

# If the bot should give the linked players a role (which will be removed if they are unlinked)
giveLinkedRole: false

# The role that should be given to linked users. Ignored if giveLinkedRole is false
linkedRole: "000000000000000000"

# Permission groups to add to users with one of the roles in the list.
# Follow the example and remove or add more as needed.
groups:
  admin: # The name of the Minecraft permissions group
    - "000000000000000000" # The ID of a Discord role
  mod:
    - "000000000000000000" # The same role can give multiple groups
  vip:
    - "111111111111111111" # Multiple Discord roles can give
    - "222222222222222222" # access to the same Minecraft group

# Configuration for the prefix that the bot will send with the messages in-game
chatPrefix:
  text: "[DRS]"

# Other server to use instead of the Mojang API.
# This is necessary if you use a shared IP with other servers and are
# getting rate-limited (errors that mention "429") by Mojang's default server.
# Leave blank to use default Mojang one.
alternativeServer: ""

# BungeeCord servers run in offline mode but need the plugin to
# run in online mode (this was a request). Put the following to true
# if you want the plugin to run in ONLINE mode even if the server
# is in offline mode.
alwaysOnlineMode: false

botActivity:
  # Whether the bot should show an activity status
  enable: false
  # The text for the bot's status.
  # Supports $online_players$, $linked_players$ and $total_players$.
  # Also supports PlaceholderAPI placeholders if you have that plugin installed (requires integrations.plugins.PlaceholderAPI: true).
  status: "$online_players$/$total_players$ players online"

# Embed configurations for messages (optional)
embed:
  # Set to true to use embeds instead of regular messages
  useEmbed: false
  # The title to set on the embeds
  title: "Discord Role Sync"
  # The color for the embed messages.
  # Must be one of https://docs.oracle.com/javase/8/docs/api/java/awt/Color.html?is-external=true
  # or a HEX color in the format #BD3A3A (including the #).
  colors:
    # For informational replies. This is the default.
    INFO: "#4287F5"
    # For success replies
    SUCCESS: "#4CC754"
    # For error replies
    ERROR: "#BD3A3A"

# If true, then the bot will reply publicly instead of with a message only the sender
# can see. This is configured per command. Verify is always private so that verification
# codes are not accidentally made public.
publicReplies:
  link: false
  info: false
  admLink: false
  unlink: false

# Enable or disable integrations with other plugins.
# Requires a full server restart to take effect.
integrations:
  plugins:
    # This plugin can read and write placeholders.
    # This plugin's placeholders are cached for 2 minutes when first accessed,
    # because they are slightly expensive to compute.
    PlaceholderAPI: false

# Experimental
# These options are experimental. They are subject to change between versions (including breaking changes).
# Please report any bugs, issues or requests that related to these experimental options on the Discord or GitLab.
experimental:
  # Geyser usernames start with a dot (`.example`). They will be automatically recognized if this
  # option is on, when linked with `/link .example`.
  # If using LuckPerms, allow-invalid-usernames must be true in the LuckPerms config file.
  geyser:
    # Enables Geyser support for linking Bedrock IDs.
    enableGeyserSupport: false
